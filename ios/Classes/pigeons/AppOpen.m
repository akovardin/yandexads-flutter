// Autogenerated from Pigeon (v10.1.6), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import "AppOpen.h"

#if TARGET_OS_OSX
#import <FlutterMacOS/FlutterMacOS.h>
#else
#import <Flutter/Flutter.h>
#endif

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSArray *wrapResult(id result, FlutterError *error) {
  if (error) {
    return @[
      error.code ?: [NSNull null], error.message ?: [NSNull null], error.details ?: [NSNull null]
    ];
  }
  return @[ result ?: [NSNull null] ];
}
static id GetNullableObjectAtIndex(NSArray *array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}

@interface AppOpenError ()
+ (AppOpenError *)fromList:(NSArray *)list;
+ (nullable AppOpenError *)nullableFromList:(NSArray *)list;
- (NSArray *)toList;
@end

@interface AppOpenImpression ()
+ (AppOpenImpression *)fromList:(NSArray *)list;
+ (nullable AppOpenImpression *)nullableFromList:(NSArray *)list;
- (NSArray *)toList;
@end

@implementation AppOpenError
+ (instancetype)makeWithCode:(NSNumber *)code
    description:(NSString *)description {
  AppOpenError* pigeonResult = [[AppOpenError alloc] init];
  pigeonResult.code = code;
  pigeonResult.description = description;
  return pigeonResult;
}
+ (AppOpenError *)fromList:(NSArray *)list {
  AppOpenError *pigeonResult = [[AppOpenError alloc] init];
  pigeonResult.code = GetNullableObjectAtIndex(list, 0);
  NSAssert(pigeonResult.code != nil, @"");
  pigeonResult.description = GetNullableObjectAtIndex(list, 1);
  NSAssert(pigeonResult.description != nil, @"");
  return pigeonResult;
}
+ (nullable AppOpenError *)nullableFromList:(NSArray *)list {
  return (list) ? [AppOpenError fromList:list] : nil;
}
- (NSArray *)toList {
  return @[
    (self.code ?: [NSNull null]),
    (self.description ?: [NSNull null]),
  ];
}
@end

@implementation AppOpenImpression
+ (instancetype)makeWithData:(NSString *)data {
  AppOpenImpression* pigeonResult = [[AppOpenImpression alloc] init];
  pigeonResult.data = data;
  return pigeonResult;
}
+ (AppOpenImpression *)fromList:(NSArray *)list {
  AppOpenImpression *pigeonResult = [[AppOpenImpression alloc] init];
  pigeonResult.data = GetNullableObjectAtIndex(list, 0);
  NSAssert(pigeonResult.data != nil, @"");
  return pigeonResult;
}
+ (nullable AppOpenImpression *)nullableFromList:(NSArray *)list {
  return (list) ? [AppOpenImpression fromList:list] : nil;
}
- (NSArray *)toList {
  return @[
    (self.data ?: [NSNull null]),
  ];
}
@end

NSObject<FlutterMessageCodec> *YandexAdsAppOpenGetCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  sSharedObject = [FlutterStandardMessageCodec sharedInstance];
  return sSharedObject;
}

void YandexAdsAppOpenSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<YandexAdsAppOpen> *api) {
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.flutter_yandex_ads.YandexAdsAppOpen.make"
        binaryMessenger:binaryMessenger
        codec:YandexAdsAppOpenGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(makeId:error:)], @"YandexAdsAppOpen api (%@) doesn't respond to @selector(makeId:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        [api makeId:arg_id error:&error];
        callback(wrapResult(nil, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
}
@interface FlutterYandexAdsAppOpenCodecReader : FlutterStandardReader
@end
@implementation FlutterYandexAdsAppOpenCodecReader
- (nullable id)readValueOfType:(UInt8)type {
  switch (type) {
    case 128: 
      return [AppOpenError fromList:[self readValue]];
    case 129: 
      return [AppOpenImpression fromList:[self readValue]];
    default:
      return [super readValueOfType:type];
  }
}
@end

@interface FlutterYandexAdsAppOpenCodecWriter : FlutterStandardWriter
@end
@implementation FlutterYandexAdsAppOpenCodecWriter
- (void)writeValue:(id)value {
  if ([value isKindOfClass:[AppOpenError class]]) {
    [self writeByte:128];
    [self writeValue:[value toList]];
  } else if ([value isKindOfClass:[AppOpenImpression class]]) {
    [self writeByte:129];
    [self writeValue:[value toList]];
  } else {
    [super writeValue:value];
  }
}
@end

@interface FlutterYandexAdsAppOpenCodecReaderWriter : FlutterStandardReaderWriter
@end
@implementation FlutterYandexAdsAppOpenCodecReaderWriter
- (FlutterStandardWriter *)writerWithData:(NSMutableData *)data {
  return [[FlutterYandexAdsAppOpenCodecWriter alloc] initWithData:data];
}
- (FlutterStandardReader *)readerWithData:(NSData *)data {
  return [[FlutterYandexAdsAppOpenCodecReader alloc] initWithData:data];
}
@end

NSObject<FlutterMessageCodec> *FlutterYandexAdsAppOpenGetCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  static dispatch_once_t sPred = 0;
  dispatch_once(&sPred, ^{
    FlutterYandexAdsAppOpenCodecReaderWriter *readerWriter = [[FlutterYandexAdsAppOpenCodecReaderWriter alloc] init];
    sSharedObject = [FlutterStandardMessageCodec codecWithReaderWriter:readerWriter];
  });
  return sSharedObject;
}

@interface FlutterYandexAdsAppOpen ()
@property(nonatomic, strong) NSObject<FlutterBinaryMessenger> *binaryMessenger;
@end

@implementation FlutterYandexAdsAppOpen

- (instancetype)initWithBinaryMessenger:(NSObject<FlutterBinaryMessenger> *)binaryMessenger {
  self = [super init];
  if (self) {
    _binaryMessenger = binaryMessenger;
  }
  return self;
}
- (void)onAdLoadedId:(NSString *)arg_id completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onAdLoaded"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
- (void)onAdFailedToLoadId:(NSString *)arg_id err:(AppOpenError *)arg_err completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onAdFailedToLoad"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null], arg_err ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
- (void)onAdFailedToShowId:(NSString *)arg_id err:(AppOpenError *)arg_err completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onAdFailedToShow"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null], arg_err ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
- (void)onAdShownId:(NSString *)arg_id completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onAdShown"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
- (void)onAdDismissedId:(NSString *)arg_id completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onAdDismissed"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
- (void)onAdClickedId:(NSString *)arg_id completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onAdClicked"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
- (void)onImpressionId:(NSString *)arg_id data:(AppOpenImpression *)arg_data completion:(void (^)(FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel =
    [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.flutter_yandex_ads.FlutterYandexAdsAppOpen.onImpression"
      binaryMessenger:self.binaryMessenger
      codec:FlutterYandexAdsAppOpenGetCodec()];
  [channel sendMessage:@[arg_id ?: [NSNull null], arg_data ?: [NSNull null]] reply:^(id reply) {
    completion(nil);
  }];
}
@end

